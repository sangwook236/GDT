[-] General.
	- Site.
		http://www.qt.io/
		http://www.qt.io/developers/

		https://doc.qt.io/
		https://doc.qt.io/qtforpython/tutorials/
		https://wiki.qt.io/Main
		https://wiki.qt.io/Qt_for_Python
		https://wiki.qt.io/Qt_for_Python/Tutorial

		http://wiki.qt.io/Jom
		http://download.qt.io/official_releases/jom/

[-] Usage.
	- Debugging.
		https://doc.qt.io/qt-5/debug.html

		export QT_DEBUG_PLUGINS=1

	- Resource.
		https://doc.qt.io/qt-5/resources.html

	- Style sheet.
		https://doc.qt.io/qt-5/stylesheet-reference.html

	- Generate makefile.
		Compile meta objects by Meta Object Compiler (moc).
			moc object_name.h -o moc_object_name.cpp
		Compile resources by Resource Compiler (rcc).
			(Optional) rcc -binary resource_name.qrc -o resource_name.rcc
			rcc resource_name.qrc -name resource_name -o qrc_resource_name.cpp
		Generate Makefile.
			qmake -spec win32-msvc2015 project_name.pro
			qmake -spec win32-msvc2015 -tp vc project_name.pro
		Make.
			jom
			make
			nmake

[-] Usage (QtCreator).
	https://doc.qt.io/qtcreator/creator-using-qt-designer.html
	https://doc.qt.io/qt-5/qtdesigner-manual.html

	- Directory.
		${QT_HOME}/Tools/QtCreator
		${QT_HOME}/Tools/QtCreator/bin/qtcreator

[-] Installation.
	- Install.
		Using online installer:
			https://www.qt.io/download-open-source
			https://www.qt.io/download-qt-installer

			chmod +x qt-unified-linux-x64-3.2.3.online.run
			./qt-unified-linux-x64-3.2.3.online.run

		Using offline installer:
			https://www.qt.io/download-open-source
			https://www.qt.io/offline-insallers

			http://download.qt.io/official_releases/qt/5.12/5.12.11/qt-opensource-linux-x64-5.12.11.run
			http://download.qt.io/official_releases/qt/5.12/5.12.3/qt-opensource-linux-x64-5.12.3.run

		Using apt:
			sudo apt install qt5-default
			sudo snap install qt513
				Check ther version:
					qmake --version
			==> May be incompatible with the Qt version of PySide2.

		sudo apt install libxcb-xinerama0

	- Python.
		pip install PyQt6
		pip install PyQt5
		pip install PySide6
		pip install PySide2

[-] Troubleshooting (Python).
	- <error> Could not initialize GLX.
		<solution>
			Set QT_XCB_GL_INTEGRATION to none.
				QT_XCB_GL_INTEGRATION=none python run.py

	- <error> ImportError: cannot import name 'qApp' from 'PySide2.QtCore'
		<solution>
			PySide2.QtCore.qApp -> PySide2.QtWidgets.QApplication.instance() (?)

	- <error> qt.qpa.plugin: Could not load the Qt platform plugin "xcb".
		<solution>
			(Optional) Set the environment variables.
				export QT_PLUGIN_PATH=$HOME/anaconda3/envs/$ENV_NAME/lib/$PYTHON/site-packages/PyQt5/Qt/plugins
				export QT_QPA_PLATFORM_PLUGIN_PATH=$HOME/anaconda3/envs/$ENV_NAME/lib/$PYTHON/site-packages/PyQt5/Qt/plugins/platforms
				export LD_LIBRARY_PATH=$HOME/anaconda3/envs/$ENV_NAME/lib/$PYTHON/site-packages/PyQt5/Qt/lib:$LD_LIBRARY_PATH

				export QT_PLUGIN_PATH=$HOME/anaconda3/envs/$ENV_NAME/lib/$PYTHON/site-packages/PyQt5/Qt5/plugins
				export QT_QPA_PLATFORM_PLUGIN_PATH=$HOME/anaconda3/envs/$ENV_NAME/lib/$PYTHON/site-packages/PyQt5/Qt5/plugins/platforms
				export LD_LIBRARY_PATH=$HOME/anaconda3/envs/$ENV_NAME/lib/$PYTHON/site-packages/PyQt5/Qt5/lib:$LD_LIBRARY_PATH

				export QT_PLUGIN_PATH=/usr/lib/x86_64-linux-gnu/qt5/plugins
				export QT_QPA_PLATFORM_PLUGIN_PATH=/usr/lib/x86_64-linux-gnu/qt5/plugins/platforms
				export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
			(Optional) Install a library.
				sudo apt install libxcb-xinerama0
			(Optional) Install OpenCV library.
				pip install opencv-python==3.4.10.37

			REF [file] >> ssh_usage_guide.txt

[-] Troubleshooting (Windows).
	- qmake.exe or QMAKESPEC.
		REF [site] >> http://stackoverflow.com/questions/5303634/qmake-qmakespec-has-not-been-set

		<error>
			qmake.exe failed to create a makefile Make sure you have a working Qt qmake on your PATH.
			QMAKESPEC has not been set, so configuration cannot be deduced.
		<cause>
			QMAKESPEC environment variable is not set.
		<solution>
			set QMAKESPEC=win32-msvc2010
			qmake -spec D:\usr\local\Qt-4.7.4\mkspecs\win32-msvc2010
		==> Can check by following commands.
			qmake -query QMAKESPEC
			qmake -query

[-] Troubleshooting (VC).
	- moc.exe or uic.exe.
		<error>
			MSB6006: "cmd.exe" exited with code3.
			The system cannot find the path specified.
			Moc'ing xxx.h
			Uic'ing xxx.ui
		<cause>
			Cannot find moc.exe & uic.exe.
		<solution>
			set QTDIR=${QT_HOME}
	- Qt platform loading error.
		<error>
			This application failed to start because it could not find or load the Qt platform plugin "windows" in "".
			Reinstalling the application may fix this problem.
		<cause>
			Qt library linking error.
		<solution>
			1) Copy qwindows.dll.
				REF [site] >> http://www.tripleboot.org/?p=138
				Copy ${QT_HOME}/plugins/platforms/qwindows.dll to ${EXECUTABLE_DIR}/platforms/qwindows.dll.
			2) Add Qt directory to $PATH.
